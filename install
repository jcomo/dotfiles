#!/bin/sh

# Exit on error
set -e

DOTFILES="
.gitconfig
.gitignore_global
.oh-my-zsh
.profile
.tmux.conf
.vim
.vimrc
.zshrc
"

OH_MY_ZSH_PLUGINS="
git://github.com/zsh-users/zsh-syntax-highlighting.git
"

success () {
    echo "\033[32m[OK]   \033[0m $1"
}

warn () {
    echo "\033[33m[WARN] \033[0m $1"
}

info () {
    echo "\033[36m[INFO] \033[0m $1"
}

silence () {
    if [[ $DEBUG = 1 ]]; then
        "$@"
    else
        "$@" &>/dev/null
    fi
}

confirm () {
    message="$1"
    read -p "$1 Continue? [yN] " response

    if [[ "y" != $response ]]; then
        info "Exiting..."
        exit 1
    fi
}

link_dotfiles () {
    for dotfile in $DOTFILES; do
        silence ln -sf "$HOME/dotfiles/$dotfile" "$HOME" || warn "Failed to link $dotfile" && \
            info "Linked $dotfile"
    done
}

install_zsh_plugins () {
    silence pushd $HOME/.oh-my-zsh/custom/plugins
    for plugin in $OH_MY_ZSH_PLUGINS; do
        silence git clone $plugin || \
            warn "Failed to install plugin at $plugin - it may already be installed"
    done
    silence popd
}

prompt_for_git_config () {
    option=$1
    prompt="$2"

    if [[ ! `git config --global $option` ]]; then
        read -p "$prompt: " item
        git config --global $option "$item"
    fi
}

configure_git () {
    prompt_for_git_config user.name "Enter your name"
    prompt_for_git_config user.email "Enter your email"

    git config --global core.excludesfile "$HOME/.gitignore_global"
}


main () {
    if [[ "debug" = $1 ]]; then
        DEBUG=1
    else
        DEBUG=0
    fi

    confirm "Running this installation will wipe all previous dotfiles."

    info "Updating git submodules"
    silence git submodule update --init || warn "Failed to update git modules"
    link_dotfiles
    info "Installing zsh plugins"
    install_zsh_plugins
    info "Configuring git"
    configure_git
    success "Dotfiles installed!"
    success "Run 'source ~/.zshrc' to get going"
}


if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
    main "$@"
fi
